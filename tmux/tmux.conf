unbind C-b
set -g prefix C-s
# bind-key -r C-s send-prefix

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

set-option -g default-terminal "screen-256color"

set -g status-bg '#5D6266'
set -g status-fg '#393D40'

set -g status-left-length 50

set -g status-right "#{battery_icon} #{battery_percentage} #{battery_remain | %a %h-%d %H:%M}   #(date '+%a, %b %d - %I:%M') "

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

#bind-key C-j choose-tree
bind c new-window -c '#{pane_current_path}'
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

# install https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard for this to work
set-option -g default-command "reattach-to-user-namespace -l zsh"
# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# # Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind-key t split-window -h -c ~/ "vim .tmux.conf"
#TODO add check to go to vim if its open, otherwise open in current directory
bind-key v new-window -c "#{pane_current_path}" "vim +CtrlP"
#TODO make work, then have it open a rails c in one side and foreman start in the other
#bind-key f split-window -h -c ~/Repositories/sh3 "foreman start"
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# for never leaving tmux
#needs tat script set up
#https://github.com/thoughtbot/dotfiles/blob/master/bin/tat
#see https://upcase.com/videos/tmux-navigation
#bind-key C-b send-keys 'tat && exit' 'C-m'
#bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

run '~/.tmux/plugins/tpm/tpm'
